#!/usr/bin/perl
use POSIX;

if( $#ARGV != 3 ) {
    die "Usage: genkeymap.pl <keysym-name> <dckeysyms.h> <keymap.txt> <output.h>\n";
}

my $name = shift();
my $dckeysymsfile = shift();
my $keymapfile = shift();
my $outputfile = shift();
my %dcsyms = ();

my %hash = ();
my %rhash = ();

open(DCKB, "<$dckeysymsfile") || die "Unable to open dckeysym file $dckeysymsfile";
while(<DCKB>) {
    if( /^#define\s+DCKB_([^ ]*)/ ) {
        $dcsyms{$1} = "DCKB_$1";
    }
}
close DCKB;

open(KM, "<$keymapfile") || die "Unable to open keymap file $keymapfile";
while(<KM>) {
    my ($val, $sym) = split /\s+/;
    $ival = POSIX::strtol($val,0);
    $hash{$ival} = $sym;
    $rhash{$sym} = $ival;
}
close KM;

open(OUT, ">$outputfile") || die "Unable to open output file $outputfile";
print OUT "/**\n * $name keyboard map autogenerated by genkeymap.pl\n */\n\n";
print OUT "const gchar *${name}_keysyms_by_keycode[128] = { ";

for( $i=0; $i < 128; $i++ ) {
    if( $i != 0 ) { 
        print OUT ", "; 
    }
    if( defined($hash{$i}) ) {
        print OUT "\"$hash{$i}\"";
    } else {
        print OUT "NULL";
    }
}
print OUT "};\n\n";

print OUT "const uint16_t ${name}_keycode_to_dckeysym[128] = { ";
for( $i=0; $i<128; $i++ ) {
    if( $i != 0 ) { 
        print OUT ", "; 
    }
    if( defined($hash{$i}) && $dcsyms{$hash{$i}} ) {
        print OUT $dcsyms{$hash{$i}};
    } else {
        print OUT "DCKB_NONE";
    }
}
print OUT "};\n\n";

my @keys = sort {uc($a) cmp uc($b)} keys %rhash;
print OUT "#define ${name}_keysym_count " . ($#keys+1) . "\n";
print OUT "struct ${name}_keymap_struct {\n    const gchar *name;\n    uint16_t keycode;\n};\n\n";
print OUT "struct ${name}_keymap_struct ${name}_keysyms[] = { ";
foreach my $keysym (@keys) {
    print OUT "{\"$keysym\", $rhash{$keysym} }, ";
}
print OUT "{NULL,-1} };\n\n";
close OUT;
